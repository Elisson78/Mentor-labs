version: '3.8'

# Docker Compose otimizado para Coolify
# Usa a infraestrutura existente de PostgreSQL e Supabase

services:
  # Backend API Server
  server:
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    container_name: nentor-server
    restart: unless-stopped
    environment:
      # Database (PostgreSQL existente no Coolify)
      - DATABASE_URL=postgresql://postgres:CSQ0OC3A0KQAwdfuxdBwKuOeZHcBZAeI@138.201.152.160:5432/postgres
      
      # Application URLs
      - NEXT_PUBLIC_API_URL=https://api.event-connect.app
      - NEXT_PUBLIC_SERVER_URL=https://api.event-connect.app
      
      # Supabase (já configurado no Coolify)
      - SUPABASE_URL=${SUPABASE_URL:-https://temp.supabase.co}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:-temp_key}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET:-temp_secret}
      
      # OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY:-temp_openai}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      
      # Google AI
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      
      # Auth
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=https://event-connect.app
      
      # Webhook
      - WEBHOOK_SECRET=${WEBHOOK_SECRET:-22e830e6941533e5b0edeacb9e4f27c5ae96}
      
      # CORS
      - CORS_ORIGIN=https://event-connect.app
      
      # Environment
      - NODE_ENV=production
    
    ports:
      - "3000:3000"
    
    networks:
      - nentor-network
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web Application
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: nentor-web
    restart: unless-stopped
    environment:
      # URLs
      - NEXT_PUBLIC_API_URL=https://api.event-connect.app
      - NEXT_PUBLIC_WEB_URL=https://event-connect.app
      - NEXT_PUBLIC_SERVER_URL=https://api.event-connect.app
      
      # Supabase (cliente)
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL:-https://temp.supabase.co}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY:-temp_anon}
      
      # Environment
      - NODE_ENV=production
    
    ports:
      - "3001:3000"
    
    depends_on:
      server:
        condition: service_healthy
    
    networks:
      - nentor-network
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  nentor-network:
    driver: bridge
    external: false

# Nota: PostgreSQL e Supabase já estão rodando como serviços separados no Coolify
# Este compose usa apenas os serviços da aplicação (server + web)