import { createClient } from '@supabase/supabase-js'

// Client est√°tico para uso geral
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co'
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-anon-key'

// Validar vari√°veis de ambiente
const hasValidConfig = !!process.env.NEXT_PUBLIC_SUPABASE_URL && !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!hasValidConfig) {
  console.warn('‚ö†Ô∏è Vari√°veis do Supabase n√£o configuradas:', {
    hasUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,
    hasKey: !!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
  })
  console.warn('‚ö†Ô∏è Usando valores placeholder para build - Configure as vari√°veis no Coolify!')
}

console.log('‚úÖ Supabase configurado:', {
  url: supabaseUrl.substring(0, 30) + '...',
  hasKey: !!supabaseAnonKey
})

// Configura√ß√µes otimizadas para produ√ß√£o
const supabaseOptions = {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  },
  global: {
    fetch: (url: RequestInfo | URL, options?: RequestInit) => {
      console.log('üîó Supabase request:', typeof url === 'string' ? url.substring(0, 50) + '...' : url)
      return fetch(url, {
        ...options,
        headers: {
          ...options?.headers,
          'Cache-Control': 'no-cache'
        }
      })
    }
  }
}

export const supabase = createClient(supabaseUrl, supabaseAnonKey, supabaseOptions)

// Supabase client para uso no client-side (componentes React)
export const createSupabaseClient = () => {
  return createClient(supabaseUrl, supabaseAnonKey, supabaseOptions)
}

// Helper para verificar se a configura√ß√£o √© v√°lida
export const hasValidSupabaseConfig = () => hasValidConfig

// Helper para mostrar erro amig√°vel quando n√£o tem configura√ß√£o
export const requireSupabaseConfig = (action: string) => {
  if (!hasValidConfig) {
    throw new Error(`N√£o √© poss√≠vel ${action} - Configure as vari√°veis NEXT_PUBLIC_SUPABASE_URL e NEXT_PUBLIC_SUPABASE_ANON_KEY no Coolify`)
  }
}